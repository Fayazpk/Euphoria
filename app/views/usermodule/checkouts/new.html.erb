<!-- app/views/usermodule/checkouts/new.html.erb -->
<div class="container mx-auto px-4 py-8">
  <h1 class="text-2xl font-bold mb-6">Checkout</h1>

  <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
    <!-- Left Column - Cart Items -->
    <div class="bg-white p-6 rounded-lg shadow">
      <h2 class="text-xl font-semibold mb-4">Order Summary</h2>
      
      <div class="space-y-4">
        <% @cart.orderables.each do |orderable| %>
          <div class="flex items-center justify-between border-b pb-4">
            <div class="flex items-center">
              <% if orderable.product.images.attached? %>
                <%= image_tag orderable.product.images.first, class: "w-16 h-16 object-cover rounded" %>
              <% end %>
              <div class="ml-4">
                <h3 class="font-medium"><%= orderable.product.name %></h3>
                <p class="text-sm text-gray-600">
                  Size: <%= orderable.size %>
                  Quantity: <%= orderable.quantity %>
                </p>
              </div>
            </div>
            <div class="text-right">
              <p class="font-medium">
                <%= number_to_currency(orderable.product.base_price * (1 - orderable.product.discount_percentage / 100.0) * orderable.quantity) %>
              </p>
            </div>
          </div>
        <% end %>
      </div>
    </div>

    <!-- Right Column - Address and Payment -->
    <div class="space-y-6">
      <div class="bg-white p-6 rounded-lg shadow">
        <%= form_with(model: @checkout,
                      url: usermodule_checkouts_path,
                      local: true,
                      html: { id: 'checkout-form' }) do |f| %>
          
          <!-- Shipping Address Section -->
          <section class="mb-8">
            <h2 class="text-xl font-semibold mb-4">Shipping Address</h2>
            
            <% if @addresses.any? %>
              <div class="space-y-4">
                <% @addresses.each do |address| %>
                  <div class="border rounded p-4">
                    <label class="flex items-center space-x-3">
                      <%= f.radio_button :address_id, address.id, class: "form-radio", required: true %>
                      <span class="text-sm">
                        <%= address.first_name %> <%= address.last_name %><br>
                        <%= address.building_name %>,
                        <%= address.street_address %><br>
                        <%= address.city.name %>, <%= address.state.name %><br>
                        <%= address.phone %>
                      </span>
                    </label>
                  </div>
                <% end %>
              </div>
            <% else %>
              <p class="text-gray-600 mb-4">No addresses found.</p>
            <% end %>

            <%= link_to "Add New Address", new_usermodule_address_path, 
                class: "inline-block bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700" %>
          </section>

          <!-- Payment Methods Section -->
          <section class="mb-8">
            <h2 class="text-xl font-semibold mb-4">Payment Method</h2>
            <div class="space-y-4">
              <!-- Wallet Payment -->
              <% if current_user.wallet.present? %>
                <div class="border rounded p-4">
                  <label class="flex items-center space-x-3">
                    <%= f.radio_button :payment_method, 'wallet', 
                        class: "form-radio payment-method-radio",
                        data: { insufficient_balance: current_user.wallet.balance < @total } %>
                    <div class="flex items-center space-x-2">
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-600" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M4 4a2 2 0 00-2 2v4a2 2 0 002 2V6h10a2 2 0 00-2-2H4zm2 6a2 2 0 012-2h8a2 2 0 012 2v4a2 2 0 01-2 2H8a2 2 0 01-2-2v-4zm6 4a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd" />
                      </svg>
                      <span>Wallet Payment</span>
                      <span class="text-sm text-gray-500">
                        (Balance: <%= number_to_currency(current_user.wallet.balance) %>)
                      </span>
                    </div>
                  </label>
                  <% if current_user.wallet.balance < @total %>
                    <p class="text-sm text-red-600 ml-8 mt-1">Insufficient balance</p>
                  <% end %>
                </div>
              <% end %>

              <!-- COD Option -->
              <div class="border rounded p-4">
                <label class="flex items-center space-x-3">
                  <%= f.radio_button :payment_method, 'cod', class: "form-radio payment-method-radio", required: true %>
                  <div class="flex items-center space-x-2">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-600" viewBox="0 0 20 20" fill="currentColor">
                      <path d="M4 4a2 2 0 00-2 2v8a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2H4zm2 3a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm8 0a1 1 0 011-1h2a1 1 0 110 2h-2a1 1 0 01-1-1z" />
                    </svg>
                    <span>Cash on Delivery</span>
                  </div>
                </label>
              </div>

              <!-- Razorpay Option -->
              <div class="border rounded p-4">
                <label class="flex items-center space-x-3">
                  <%= f.radio_button :payment_method, 'razorpay', class: "form-radio payment-method-radio" %>
                  <div class="flex items-center space-x-2">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-600" viewBox="0 0 20 20" fill="currentColor">
                      <path d="M4 4a2 2 0 00-2 2v1h16V6a2 2 0 00-2-2H4z" />
                      <path fill-rule="evenodd" d="M18 9H2v5a2 2 0 002 2h12a2 2 0 002-2V9zM4 13a1 1 0 011-1h1a1 1 0 110 2H5a1 1 0 01-1-1zm5-1a1 1 0 100 2h1a1 1 0 100-2H9z" clip-rule="evenodd" />
                    </svg>
                    <span>Pay Online (Razorpay)</span>
                  </div>
                </label>
              </div>
            </div>
          </section>

          <!-- Coupon Section -->
          <section class="mb-8">
            <h2 class="text-xl font-semibold mb-4">Coupon Code</h2>
            <div class="flex space-x-2">
              <%= f.text_field :coupon_code, 
                  class: "form-input w-full",
                  placeholder: "Enter coupon code" %>
              <button type="button" 
                      id="apply-coupon-btn"
                      class="bg-gray-800 text-white px-4 py-2 rounded hover:bg-gray-700">
                Apply
              </button>
            </div>
          </section>

          <!-- Order Summary -->
          <section>
            <h2 class="text-xl font-semibold mb-4">Order Summary</h2>
            <div class="space-y-2">
              <div class="flex justify-between">
                <span>Subtotal</span>
                <span><%= number_to_currency(@subtotal) %></span>
              </div>
              <div class="flex justify-between">
                <span>Tax</span>
                <span><%= number_to_currency(@tax) %></span>
              </div>
              <div class="flex justify-between">
                <span>Shipping</span>
                <span><%= number_to_currency(@shipping) %></span>
              </div>
              <div id="discount-row" class="flex justify-between <%= 'hidden' unless @discount&.positive? %>">
                <span>Discount</span>
                <span>-<%= number_to_currency(@discount) %></span>
              </div>
              <div class="flex justify-between font-bold border-t pt-2">
                <span>Total</span>
                <span id="final-total"><%= number_to_currency(@total) %></span>
              </div>
            </div>
          </section>

          <%= f.submit "Place Order", 
              class: "w-full mt-6 bg-green-600 text-white px-6 py-3 rounded font-medium hover:bg-green-700",
              data: { confirm: "Confirm your order?" },
              id: "place-order-button" %>
        <% end %>
      </div>
    </div>
  </div>
</div>

<%= javascript_tag do %>
  const razorpayKeyId = '<%= ENV['RAZORPAY_KEY_ID'] %>';
  const storeName = '<%= Rails.application.config.site_name rescue "Your Store" %>';
  const userName = '<%= current_user.name %>';
  const userEmail = '<%= current_user.email %>';

  // Initialize Razorpay
  const loadRazorpay = () => {
    return new Promise((resolve, reject) => {
      const script = document.createElement('script');
      script.src = 'https://checkout.razorpay.com/v1/checkout.js';
      script.onload = resolve;
      script.onerror = reject;
      document.head.appendChild(script);
    });
  };

  loadRazorpay().catch(error => {
    console.error('Failed to load Razorpay:', error);
  });

  // Form Validation and Submission
  const checkoutForm = document.getElementById('checkout-form');
  const placeOrderButton = document.getElementById('place-order-button');

  const validateForm = () => {
    const addressSelected = document.querySelector('input[name="checkout[address_id]"]:checked');
    const paymentSelected = document.querySelector('input[name="checkout[payment_method]"]:checked');

    if (!addressSelected) {
      alert('Please select a shipping address');
      return false;
    }

    if (!paymentSelected) {
      alert('Please select a payment method');
      return false;
    }

    return true;
  };

  checkoutForm.addEventListener('submit', function(e) {
    if (!validateForm()) {
      e.preventDefault();
      return;
    }

    const paymentMethod = document.querySelector('input[name="checkout[payment_method]"]:checked').value;
    
    if (paymentMethod === 'razorpay') {
      e.preventDefault();
      initiateRazorpayPayment();
    }
  });

  // Payment Processing
  const initiateRazorpayPayment = async () => {
    placeOrderButton.disabled = true;
    
    try {
      const formData = new FormData(checkoutForm);
      const response = await fetch('/usermodule/checkouts', {
        method: 'POST',
        headers: {
          'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content,
          'Accept': 'application/json'
        },
        body: formData
      });

      const data = await response.json();
      
      if (!data.razorpay_order_id) {
        throw new Error(data.error || 'Failed to create order');
      }

      const options = {
        key: razorpayKeyId,
        amount: data.amount,
        currency: data.currency,
        name: storeName,
        description: 'Order Payment',
        order_id: data.razorpay_order_id,
        handler: response => handleRazorpaySuccess(response, data.checkout_id),
        prefill: {
          name: userName,
          email: userEmail,
        },
        theme: {
          color: '#16a34a'
        },
        modal: {
          ondismiss: () => { placeOrderButton.disabled = false; }
        }
      };

      const rzp = new Razorpay(options);
      rzp.open();
    } catch (error) {
      console.error('Payment initialization failed:', error);
      alert('Failed to initialize payment. Please try again.');
      placeOrderButton.disabled = false;
    }
  };

  const handleRazorpaySuccess = async (response, checkoutId) => {
  try {
    const result = await fetch(`/usermodule/checkouts/${checkoutId}/razorpay_callback`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
      },
      body: JSON.stringify({
        checkout: {
          razorpay_payment_id: response.razorpay_payment_id,
          razorpay_order_id: response.razorpay_order_id,
          razorpay_signature: response.razorpay_signature
        }
      })
    });

    const data = await result.json();
    
    if (data.success) {
      window.location.href = data.redirect_url;
    } else {
      throw new Error(data.error || 'Payment verification failed');
    }
  } catch (error) {
    console.error('Payment verification failed:', error);
    alert('Payment verification failed. Please contact support.');
    placeOrderButton.disabled = false;
  }
};
  // Wallet Payment Handling
  document.querySelectorAll('input[name="checkout[payment_method]"]').forEach(radio => {
    radio.addEventListener('change', function() {
      if (this.value === 'wallet' && this.dataset.insufficientBalance === 'true') {
        this.checked = false;
        if (confirm('Insufficient wallet balance. Would you like to add money to your wallet?')) {
          window.location.href = '/usermodule/wallet';
        }
      }
    });
  });

  // Coupon Handling
  function applyCoupon() {
    const couponCode = document.querySelector('input[name="checkout[coupon_code]"]').value;
    
    fetch('/usermodule/checkouts/apply_coupon', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
      },
      body: JSON.stringify({ coupon_code: couponCode })
    })
    .then(response => response.json())
    .then(data => {
      const discountRow = document.getElementById('discount-row');
      const finalTotal = document.getElementById('final-total');
      
      if (data.discount > 0) {
        discountRow.classList.remove('hidden');
        discountRow.querySelector('span:last-child').textContent = 
          `-${new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(data.discount)}`;
      } else {
        discountRow.classList.add('hidden');
      }
      
      finalTotal.textContent = 
        new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(data.total);
      
      alert(data.message || data.error);
    })
    .catch(error => {
      console.error('Error:', error);
      alert('Error applying coupon');
    });
  }
<% end %>
